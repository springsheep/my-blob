(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{585:function(t,r,e){"use strict";e.r(r);var a=e(5),s=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("/*")]),t._v(" "),e("ul",[e("li",[t._v("@Descripttion: ----描述----")]),t._v(" "),e("li",[t._v("@version: 1.0")]),t._v(" "),e("li",[t._v("@Author: 张鹏")]),t._v(" "),e("li",[t._v("@Date: 2022-01-02 00:12:55")]),t._v(" "),e("li",[t._v("@LastEditors: 张鹏")]),t._v(" "),e("li",[t._v("@LastEditTime: 2022-01-02 00:12:56\n*/")])]),t._v(" "),e("h2",{attrs:{id:"git版本回退"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git版本回退"}},[t._v("#")]),t._v(" git版本回退")]),t._v(" "),e("h2",{attrs:{id:"git回退某个文件到某个版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git回退某个文件到某个版本"}},[t._v("#")]),t._v(" git回退某个文件到某个版本")]),t._v(" "),e("h2",{attrs:{id:"reset-和revert的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset-和revert的区别"}},[t._v("#")]),t._v(" reset 和revert的区别")]),t._v(" "),e("h2",{attrs:{id:"撤销某个文件的某次提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#撤销某个文件的某次提交"}},[t._v("#")]),t._v(" 撤销某个文件的某次提交")]),t._v(" "),e("h2",{attrs:{id:"git-flow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-flow"}},[t._v("#")]),t._v(" git flow")]),t._v(" "),e("h2",{attrs:{id:"git-merge-和-rebase的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-merge-和-rebase的区别"}},[t._v("#")]),t._v(" git merge 和 rebase的区别")]),t._v(" "),e("ol",[e("li",[t._v("marge 特点：自动创建一个新的commit"),e("br"),t._v("\n如果合并的时候遇到冲突，仅需要修改后重新commit"),e("br"),t._v("\n优点：记录了真实的commit情况，包括每个分支的详情"),e("br"),t._v("\n缺点：因为每次merge会自动产生一个merge commit，所以在使用一些git 的GUI tools，特别是commit比较频繁时，看到分支很杂乱。")]),t._v(" "),e("li",[t._v("rebase 特点：会合并之前的commit历史"),e("br"),t._v("\n优点：得到更简洁的项目历史，去掉了merge commit"),e("br"),t._v("\n缺点：如果合并出现代码问题不容易定位，因为re-write了history")])])])}),[],!1,null,null,null);r.default=s.exports}}]);